S ->	IDENTIFIER `START` LINE_FEED { A LINE_FEED } `END`

A ->	PARAGRAPH D | Q | F

D ->	`ENTRY` `go` |
		`EXTRN` IDENTIFIER [ LEFT_PAREN IDENTIFIER RIGHT_PAREN ]
				{ COMMA IDENTIFIER [ LEFT_PAREN IDENTIFIER RIGHT_PAREN ] }
		`EMPTY` IDENTIFIER { COMMA IDENTIFIER }
		
Q ->	IDENTIFIER `S` X
X ->	{ [ B ] [ LEFT_PAREN B RIGHT_PAREN ] }
B ->	QUALIFIER | STRING | LABEL | NUMBER |
		`S` | `F` | `N` | `O` | `L` | `D` | `B` | `W`

F ->	IDENTIFIER [ LINE_FEED ] C { LINE_FEED PARAGRAPH C }
C ->	( `L` | `R` | ) P EQUALITY E
P ->	{ T }
T ->	STRING | LABEL | NUMBER | V | LEFT_PAREN P RIGHT_PAREN
E ->	{ G }
G ->	STRING | LABEL | NUMBER | V | LEFT_PAREN E RIGHT_PAREN |
		LESS IDENTIFIER E GREAT

V ->	( `S` | `W` | `E` | `V` ) [ LEFT_PAREN X RIGHT_PAREN ] IDENTIFIER(1)
