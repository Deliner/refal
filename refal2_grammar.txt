LETTER			-> `a` | `b` | ... | `z` | `A` | `B` | ... | `Z`
DIGIT			-> `0` | `1` | ... | `9`
LEFT_PAREN		-> `(`
RIGHT_PAREN		-> `)`
COMMA			-> `,`
EQUALITY		-> `=`
LESS			-> `<`
GREAT			-> `>`
QUALIFIER		-> `:` I `:`
LABEL			-> `/` I `/`
NUMBER			-> `/` DIGIT { DIGIT } `/`
STRING like string constant in C
LETTER_OR_DIGIT -> LETTER | DIGIT
LINE_FEED		-> { (`\n` | `\r` | `\t` | ` `) } (`\r` | `\n`)
SPACE			-> { (`\t` | ` `) }

# ------------------------------------------------------------------------------
I	-> IB IL
IL	-> IS IL |
IB	-> LETTER | `_`
IS	-> LETTER | DIGIT | `_`
WS	-> SPACE |

# ------------------------------------------------------------------------------
S	-> A LINE_FEED S
A	-> SPACE D | I K

# ------------------------------------------------------------------------------
D	-> `extrn` D1 | `empty` D2 |
	   `entry` D3 | `end` | C

D1	-> SPACE D1E D1L
D1L	-> WS COMMA WS D1E D1L |
D1E	-> I | LEFT_PAREN WS I WS RIGHT_PAREN
				
D2	-> SPACE I D2L
D2L	-> WS COMMA WS I D2L |

D3	-> SPACE `go`

# ------------------------------------------------------------------------------
K ->	SPACE W |
W ->	`S` Y | `start` | C
Y ->	SPACE X | VS LETTER_OR_DIGIT N

#-------------------------------------------------------------------------------
C	-> CT N
CT	-> `l` | `r` |
N	-> P WS EQUALITY WS E
P	-> WS T P |
E	-> WS TE E |
T	-> STRING | LABEL | NUMBER | V | LEFT_PAREN P WS RIGHT_PAREN
TE	-> TE | LESS I E WS GREAT

#-------------------------------------------------------------------------------
X	-> WS XE X |
XE	-> B | LEFT_PAREN WS B WS RIGHT_PAREN
B	-> QUALIFIER | STRING | LABEL | NUMBER |
		`s` | `f` | `n` | `o` | `l` | `d` | `b` | `w`

# ------------------------------------------------------------------------------
V	-> VT VS LETTER_OR_DIGIT
VT	-> `s` | `w` | `e` | `v`
VS	-> LEFT_PAREN X WS RIGHT_PAREN |

