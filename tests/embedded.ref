	entry go
	extrn card, print, prout, printm, proutm
	extrn add, sub, mul, div, dr, p1, m1, nrel, numb, symb, cvb, cvd
	extrn opnget, libget, clsget, opnput, libput, clsput
	extrn chartof, ftochar, functab
	extrn br, dg, cp, rp, dgall
	extrn lengw, lengr, first, last, multe
	extrn apply

sep = '\n\n----------------------------------------------------------------\n\n'

go
	= <testIO><sep>+
	<testArithmetic><sep>+
	<testFiles><sep>+
	<testLabels><sep>+
	<testReceptacle><sep>+
	<testLexical>

*------------------------------------------------------------------------------

	empty abc, def

printTestExpr = /abc/(':=()'/25/';'/def/)':=-'/9/

testIO
	= <print<printTestExpr>>'\n'+
	<printm<printTestExpr> >'\n'+
	<prout<printTestExpr>>'\n'+
	<proutm<printTestExpr>>

*------------------------------------------------------------------------------

testArithmetic
	= <cvd <div (<cvb'117465755457585484848974'>) <cvb'57278127'>>>'\n'+
	<cvd<cvb<cvd<cvb'7654474517947641798494'>>>>'\n'+
	<cvb<cvd<cvb<cvd/7654//457465//223522/>>>>'\n'+
	<mul('-'/54//88//63/)/99//65/>'\n'+
	<add(/54//88//63/)'-'/99//65/>'\n'+
	<sub(<cvb'57278127'>)<cvb'117465755457585484848974'>>'\n'+
	<numb '+345'>'\n'+
	<symb '-'/567/>'\n'+
	<dr (/16/)/5/>'\n'+
	<dr (/16/)'-'/5/>'\n'+
	<dr ('-'/16/)/5/>'\n'+
	<dr ('-'/16/)'-'/5/>'\n\n'+
	'Fibonacci(100): '<fib /100/(/0/)/1/>'\n\n'+
	<commonPrefix(<mempi>)<cvd<pi>>>

fib
	/0/(v(N)a)v(N)b =
	s(N)k(v(N)a)v(N)b = <cvd va>'\n'<fib<m1 sk>(vb)<add(va)vb>>

oddDegrees
	/0/s(N)xv(N)r =
	s(N)ks(N)xv(N)r = (vr)<oddDegrees<m1 sk>sx<mul(<mul(sx)sx>)vr>>

arctg
	(e(N)a)v(N)os('+-')ss(N)k = ea
	(e(N)a)v(N)o'+'s(N)k(v(N)d)er =+
		<arctg(<add(ea)<div(vo)<mul(sk)vd>>>)vo'-'<add (/2/)sk>er>
	(e(N)a)v(N)o'-'s(N)k(v(N)d)er =+
		<arctg(<sub(ea)<div(vo)<mul(sk)vd>>>)vo'+'<add (/2/)sk>er>

big = <cvb'4'<multe/200/'0'>>

pi = <sub (<arctg ()<mul(/4/)<big>>'+'/1/<oddDegrees /200//5//5/>>)+
		<arctg ()<big>'+'/1/<oddDegrees /40//239//239/>>>

mempi = '31415926535897932384626433832795028841971693993751058209749445923078164062862089986280348253421170679821480865132823066470938446095505822317253594081284811174502841027019385211055596446229489549303819644288109756659334461284756482337867831652712019091456485669234603486104543266482133936072602491412737245870066063155881748815209209628292540917153643678925903600113305305488204665213841469519415116094330572703657595919530921861173819326117931051185480744623799627495673518857527248912279381830119491298336733624406566430860213949463952247371907021798609437027705392171762931767523846748184676694051320005681271452635608277857713427577896091736371787214684409012249534301465495853710507922796892589235420199561121290219608640344181598136297747713099605187072113499999983729780499510597317328160963185950244594553469083026425223082533446850352619311881710100031378387528865875332083814206171776691473035982534904287554687311595628638823537875937519577818577805321712268066130019278766111959092164201989'

commonPrefix
	()e1 = /0/
	(e1) = /0/
	(w1e2)w1e3 = <p1<commonPrefix(e2)e3>>
	(w1e3)w2e4 = /0/

*------------------------------------------------------------------------------

filesTestExpr = 'Hello, Wordl!\n\n'('Refal'('2'))

readFullText
	v1 = v1<readFullText<Libget>>
	=

filename = 'check.txt'

testFiles
	= <opnput<filename>><libput<filesTestExpr>><clsput>+
	<opnget<filename>><readFullText<Libget>><clsget>

*------------------------------------------------------------------------------

testLabels =

*------------------------------------------------------------------------------

testReceptacle
	= <br 'x=aaa'><br '=2'><br 'x='><cp 'x'><dgall>

*------------------------------------------------------------------------------

testLexical
	= <lengw 'length'>'$'<lengw ('length')>'$'<lengw /1/'2'/lengw/()>'$'<lengw>'\n'+
	<lengr 'length'>'$'<lengr ('length')>'$'<lengr /1/'2'/lengw/()>'$'<lengr>'\n'+
	<first /1/'hello'>'$'<first /3/'h'('ell')'o'>'$'<first /0/'expr'>'$'<first /5/'expr'>'\n'+
	<last /1/'hello'>'$'<last /3/'h'('ell')'o'>'$'<last /0/'expr'>'$'<last /5/'expr'>'\n'+
	<multe/1/>'$'<multe/1/'a'>'$'<multe/7/'a'('b')'c'>
